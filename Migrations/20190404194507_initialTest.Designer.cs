// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using timebot.Contexts;

namespace timebot.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190404194507_initialTest")]
    partial class initialTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("timebot.Classes.Assets.Asset", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AssetType")
                        .HasColumnName("AssetType");

                    b.Property<string>("Attack")
                        .HasColumnName("Attack");

                    b.Property<string>("Cost")
                        .HasColumnName("Cost");

                    b.Property<string>("Counterattack")
                        .HasColumnName("Counterattack");

                    b.Property<string>("Description")
                        .HasColumnName("Description");

                    b.Property<string>("HP")
                        .HasColumnName("HP");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.Property<string>("TechLevel")
                        .HasColumnName("TechLevel");

                    b.Property<string>("Tier")
                        .HasColumnName("Tier");

                    b.Property<string>("Type")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("timebot.Classes.BlameCal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime>("timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("ID");

                    b.ToTable("BlameCals");
                });

            modelBuilder.Entity("timebot.Classes.BullyReason", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("value")
                        .HasColumnName("value");

                    b.HasKey("ID");

                    b.ToTable("BullyReasons");
                });

            modelBuilder.Entity("timebot.Classes.PopCount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<decimal>("FactionID")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)))
                        .HasColumnName("FactionID");

                    b.Property<string>("FactionName")
                        .HasColumnName("FactionName");

                    b.Property<int>("MemCount")
                        .HasColumnName("MemCount");

                    b.Property<DateTime>("timestamp")
                        .HasColumnName("timestamp");

                    b.HasKey("ID");

                    b.ToTable("PopCounts");
                });

            modelBuilder.Entity("timebot.Classes.Tags.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
